/*
 * ShoppingCart allows you to update the quantity of the items.
 * When you update the table it will also update the merchandise total.
 * The ShoppingCart will open up after the Customer selects an item.
 * It allows the Customer to remove item also
 * Able to view ItemNumber, Name Description, Price, Qty and Image
 */
package BlackMarket;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;


public class ShoppingCart extends javax.swing.JFrame {
Connection conn = null;
ResultSet rs = null;
PreparedStatement pst = null;

    /**
     * Creates new form Learning
     */
    public ShoppingCart() {
        initComponents();
        conn = javaconnect.ConnecrDb();
        
        Update_table();
        
    }


//PRINT USERNAME
//HAVE TO LINK IT TO CUSTOMER TABLE
private void username(){
    try{
    String sql = "select Name from //shoppingcart";
    
    pst = conn.prepareStatement(sql);
    rs = pst.executeQuery();
    this.username.setText("WELCOME: "+sql);
    }catch(SQLException e){
        JOptionPane.showMessageDialog(null, e);
    }finally{
        try{
            rs.close();
            pst.close();
        } catch(SQLException e){
            
        }
    } 
}


//PRINT MERCHANDISE TOTAL
//COMPLETED

private void sendmerchandiseTotal(){
    try{
    String sql= "select sum(Price*Qty), sum(0.07*Price*Qty), sum((Price*Qty)+(0.07*Price*Qty)) from ShoppingCart";
    pst = conn.prepareStatement(sql);
    rs = pst.executeQuery();
    if(rs.next()){
        String sum = rs.getString("sum(Price*Qty)");
        String tax_sum = rs.getString("sum(0.07*Price*Qty)");
        String order_total = rs.getString("sum((Price*Qty)+(0.07*Price*Qty))");
        //int in = Integer.parseInt(sum);
        //double tax = 0.7 * in;
        this.order_total.setText(order_total);
        this.tax_label.setText(tax_sum);
        this.merchandise_total.setText(sum);
        
    }
    }catch(SQLException e){
        JOptionPane.showMessageDialog(this, e);
    }finally{
        try{
            rs.close();
            pst.close();
        } catch(SQLException e){            
        }
    }     
}

 int work(int shipping){
//    String sum = this.merchandiseTotalTF.getText();
    int order_total = Integer.parseInt(sum);
    //int shipping_total = Integer.parseInt(shipping);
    
    int total = shipping + order_total;
    return total;
}

//UPDATE TABLE
//COMPLETED
private void Update_table(){
    try{
    String sql = "select ItemNumber, Name, Description, Price, Qty, (Price*Qty) as Total from shoppingcart";
    pst = conn.prepareStatement(sql);
    rs = pst.executeQuery();
    scTable.setModel(DbUtils.resultSetToTableModel(rs));
    }
    catch(SQLException e){
        JOptionPane.showMessageDialog(null, e);
    } finally{
        try{
            rs.close();
            pst.close();
        } catch(SQLException e){
        }
    }
    sendmerchandiseTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        dropOff = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        scKeepShopping = new javax.swing.JButton();
        scRemove = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        merchandiseTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        orderTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        scTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        image = new javax.swing.JLabel();
        updateQuantity = new javax.swing.JButton();
        qty = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tax_label = new javax.swing.JLabel();
        merchandise_total = new javax.swing.JLabel();
        order_total = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BLACK MARKET");
        setPreferredSize(new java.awt.Dimension(1022, 606));

        dropOff.setText("Log Off");
        dropOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropOffActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Chalkduster", 0, 36)); // NOI18N
        jLabel1.setText("SHOPPING CART");
        jLabel1.setSize(new java.awt.Dimension(45, 40));

        username.setText("WELCOME:");

        scKeepShopping.setText("KEEP SHOPPING");
        scKeepShopping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scKeepShoppingActionPerformed(evt);
            }
        });

        scRemove.setText("REMOVE");
        scRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scRemoveMouseClicked(evt);
            }
        });
        scRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scRemoveActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BlackMarket/skullhead_icon_by_k_liss-d4kzehj.png"))); // NOI18N
        jLabel7.setText("BM");

        merchandiseTotal.setText("MERCHANDISE TOTAL:");

        jLabel6.setText("SHIPPING:");

        orderTotal.setText("ORDER TOTAL:");

        scTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Number", "Name", "Description", "Item Price", "Qty", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(scTable);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Free (5-7 Days) $0.00", "Second Day $15.00", "Overnight $21.00" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        updateQuantity.setText("UPDATE QUANTITY");
        updateQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateQuantityActionPerformed(evt);
            }
        });

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });

        jLabel2.setText("Tax:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(username)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scKeepShopping)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateQuantity)
                                .addGap(6, 6, 6)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dropOff))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(merchandiseTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(merchandise_total, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(orderTotal)
                                                .addGap(3, 3, 3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tax_label, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(order_total, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)))
                                .addComponent(jLabel7)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropOff)
                            .addComponent(username)))
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scKeepShopping)
                            .addComponent(scRemove)
                            .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateQuantity))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(merchandiseTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(merchandise_total, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tax_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(orderTotal))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(order_total, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    
    int to = jComboBox1.getSelectedIndex();
    String sum = this.merchandise_total.getText();
    int shipping_total = Integer.parseInt(sum);
    int order_total =  shipping_total;
    int sc;
    
        if(to == 0){
            //this.orderTotalTF.setText(sum);
            //sc = 10;
             //order_total = shipping_total + sc;
             //String f = ""+ order_total;
             //this.orderTotalTF.setText(f);
        } else if(to == 1){
            //this.orderTotalTF.setText(""+(shipping_total+15));
            //sc = 15;
            //order_total = shipping_total + sc;
            //String f = ""+ order_total;
            //int order_total = shipping_total + sc;
            //this.orderTotalTF.setText(f);
            //Update_table();
        } else if(to == 2){
            //this.orderTotalTF.setText(""+(shipping_total+25));
            //sc = 21;
            //int order_total = shipping_total + sc;
            //this.orderTotalTF.setText(""+order_total);
            
        }
        //orderTotalTF.setText(""+order_total);
        //this.orderTotalTF.setText(""+sc+x);
       Update_table();
        
         }//GEN-LAST:event_jComboBox1ActionPerformed
  
  
    
//SEE THE SELECTED PIC
//COMPLETED
    private void scTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scTableMouseClicked
        int row = scTable.getSelectedRow();
        String Table_click = (scTable.getModel().getValueAt(row, 0).toString());
        
        try{
            String sql = "select Image from ShoppingCart where ItemNumber = '"+Table_click+"'";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            if(rs.next()){
                byte[]imagedata = rs.getBytes("Image");
                format = new ImageIcon(imagedata);
                image.setIcon(format);
            }
        } catch(SQLException e){
        }finally{
        try{
            rs.close();
            pst.close();
        } catch(SQLException e){
            
        }
    }
    }//GEN-LAST:event_scTableMouseClicked

//REMOVE ITEM
//COMPLETED
    private void scRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scRemoveActionPerformed
        int row = scTable.getSelectedRow();
        String Table_click = (scTable.getModel().getValueAt(row, 0).toString());
        String sql = "delete from shoppingcart where ItemNumber = ? ";
        try{
            pst = conn.prepareStatement(sql);
            pst.setString(1, Table_click);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Item Removed");
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        Update_table();
    }//GEN-LAST:event_scRemoveActionPerformed
//CHECK TO SEE IF I NEED TO DELETE
    private void scRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scRemoveMouseClicked
        
/*        try{
            int row = scTable.getSelectedRow();
            String Table_click = (scTable.getModel().getValueAt(row, 0).toString());
            String sql = "delete from ShoppingCart where ITEM = '"+Table_click+"'";
            pst = conn.prepareStatement(sql);
            pst.setString(1, Table_click);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Item Removed");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        Update_table();*/    }//GEN-LAST:event_scRemoveMouseClicked
//UPDATE QUANTITY
//COMPLETED
    private void updateQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateQuantityActionPerformed
        int row = scTable.getSelectedRow();
        String Table_click = (scTable.getModel().getValueAt(row, 0).toString());
        try{
            String qtyValue = qty.getText();
            //int mt = Integer.parseInt(qtyValue);
            String sql = "update shoppingcart set Qty='"+qtyValue+"'where ItemNumber='"+Table_click+"'";
            pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Quantity Updated");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        Update_table();
    }//GEN-LAST:event_updateQuantityActionPerformed

    private void scKeepShoppingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scKeepShoppingActionPerformed
        // TODO add your handling code here:
        mainPage regFace = new mainPage();
        regFace.setVisible(true);
        dispose();
    }//GEN-LAST:event_scKeepShoppingActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void dropOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropOffActionPerformed
        // TODO add your handling code here:
        Login regFace = new Login();
        regFace.setVisible(true);
        dispose();
    }//GEN-LAST:event_dropOffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ShoppingCart().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton dropOff;
    private javax.swing.JLabel image;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel merchandiseTotal;
    private javax.swing.JLabel merchandise_total;
    private javax.swing.JLabel orderTotal;
    private javax.swing.JLabel order_total;
    private javax.swing.JTextField qty;
    private javax.swing.JButton scKeepShopping;
    private javax.swing.JButton scRemove;
    private javax.swing.JTable scTable;
    private javax.swing.JLabel tax_label;
    private javax.swing.JButton updateQuantity;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
    
    private ImageIcon format = null;
    
      
}
